from collections import OrderedDict
from RegistersDisplay import RegisterInfo as r

# need this for the bus addresses values
from SuperLaserLand_JD_RP import SuperLaserLand_JD_RP as c

# Build an OrderedDict of namedtuples.
# the key represents the fieldname for a single register, and the namedtuples contain the info for that reg
reg_definitions = OrderedDict([
   # 'fieldname',                  'subsystem', 'display_name', 'addr',                                        'show', 'formatting_func'
('STATUS_FLAGS',                         r('', '',              c.BUS_ADDR_STATUS_FLAGS,                         True, str)),
('DITHER0_LOCKIN_REAL_LSB',              r('Dither', '',        c.BUS_ADDR_DITHER0_LOCKIN_REAL_LSB,              True, str)),
('DITHER0_LOCKIN_REAL_MSB',              r('Dither', '',        c.BUS_ADDR_DITHER0_LOCKIN_REAL_MSB,              True, str)),
('DITHER1_LOCKIN_REAL_LSB',              r('Dither', '',        c.BUS_ADDR_DITHER1_LOCKIN_REAL_LSB,              True, str)),
('DITHER1_LOCKIN_REAL_MSB',              r('Dither', '',        c.BUS_ADDR_DITHER1_LOCKIN_REAL_MSB,              True, str)),
('ZERO_DEADTIME_SAMPLES_NUMBER',         r('Counter', '',       c.BUS_ADDR_ZERO_DEADTIME_SAMPLES_NUMBER,         True, str)),
('ZERO_DEADTIME_COUNTER0_LSBS',          r('Counter', '',       c.BUS_ADDR_ZERO_DEADTIME_COUNTER0_LSBS,          True, str)),
('ZERO_DEADTIME_COUNTER0_MSBS',          r('Counter', '',       c.BUS_ADDR_ZERO_DEADTIME_COUNTER0_MSBS,          True, str)),
('ZERO_DEADTIME_COUNTER1_LSBS',          r('Counter', '',       c.BUS_ADDR_ZERO_DEADTIME_COUNTER1_LSBS,          True, str)),
('ZERO_DEADTIME_COUNTER1_MSBS',          r('Counter', '',       c.BUS_ADDR_ZERO_DEADTIME_COUNTER1_MSBS,          True, str)),
('DAC0_CURRENT',                         r('', '',              c.BUS_ADDR_DAC0_CURRENT,                         True, str)),
('DAC1_CURRENT',                         r('', '',              c.BUS_ADDR_DAC1_CURRENT,                         True, str)),
('DAC2_CURRENT',                         r('', '',              c.BUS_ADDR_DAC2_CURRENT,                         True, str)),
('vco_amplitude',                        r('VCO', '',           c.BUS_ADDR_vco_amplitude,                        True, str)),
('vco_offset',                           r('VCO', '',           c.BUS_ADDR_vco_offset,                           True, str)),
('vco_mux',                              r('VCO', '',           c.BUS_ADDR_vco_mux,                              True, str)),
('TRIG_SYSTEM_IDENTIFICATION',           r('', '',              c.BUS_ADDR_TRIG_SYSTEM_IDENTIFICATION,           True, str)),
('TRIG_RESET_FRONTEND',                  r('', '',              c.BUS_ADDR_TRIG_RESET_FRONTEND,                  True, str)),
('TRIG_WRITE',                           r('', '',              c.BUS_ADDR_TRIG_WRITE,                           True, str)),
('TEST_OSC',                             r('', '',              c.BUS_ADDR_TEST_OSC,                             True, str)),
('TEST_OSC_DUTY',                        r('', '',              c.BUS_ADDR_TEST_OSC_DUTY,                        True, str)),
('CLK_SEL',                              r('', '',              c.BUS_ADDR_CLK_SEL,                              True, str)),
('number_of_cycles_integration',         r('', '',              c.BUS_ADDR_number_of_cycles_integration,         True, str)),
('first_modulation_frequency_lsbs',      r('', '',              c.BUS_ADDR_first_modulation_frequency_lsbs,      True, str)),
('first_modulation_frequency_msbs',      r('', '',              c.BUS_ADDR_first_modulation_frequency_msbs,      True, str)),
('modulation_frequency_step_lsbs',       r('', '',              c.BUS_ADDR_modulation_frequency_step_lsbs,       True, str)),
('modulation_frequency_step_msbs',       r('', '',              c.BUS_ADDR_modulation_frequency_step_msbs,       True, str)),
('number_of_frequencies',                r('', '',              c.BUS_ADDR_number_of_frequencies,                True, str)),
('output_gain',                          r('', '',              c.BUS_ADDR_output_gain,                          True, str)),
('input_and_output_mux_selector',        r('', '',              c.BUS_ADDR_input_and_output_mux_selector,        True, str)),
('VNA_mode_control',                     r('', '',              c.BUS_ADDR_VNA_mode_control,                     True, str)),
('PWM0',                                 r('', '',              c.BUS_ADDR_PWM0,                                 True, str)),
('DAC_offset[0]',                        r('', '',              c.BUS_ADDR_DAC_offset[0],                        True, str)),
('DAC_offset[1]',                        r('', '',              c.BUS_ADDR_DAC_offset[1],                        True, str)),
('DAC_offset[2]',                        r('', '',              c.BUS_ADDR_DAC_offset[2],                        True, str)),
('pga_gains',                            r('', '',              c.BUS_ADDR_pga_gains,                            True, str)),
('dac_limits[0]',                        r('', '',              c.BUS_ADDR_dac_limits[0],                        True, str)),
('dac_limits[1]',                        r('', '',              c.BUS_ADDR_dac_limits[1],                        True, str)),
('dac_limits[2]',                        r('', '',              c.BUS_ADDR_dac_limits[2],                        True, str)),
# ('fll0_settings',                        r('', '',              c.BUS_ADDR_fll0_settings,                        True, str)),
# ('pll0_gain_p',                          r('', '',              c.BUS_ADDR_pll0_gain_p,                          True, str)),
# ('pll0_gain_i',                          r('', '',              c.BUS_ADDR_pll0_gain_i,                          True, str)),
# ('pll0_settings',                        r('', '',              c.BUS_ADDR_pll0_settings,                        True, str)),
# ('pll0_gain_ii',                         r('', '',              c.BUS_ADDR_pll0_gain_ii,                         True, str)),
# ('fll1_settings',                        r('', '',              c.BUS_ADDR_fll1_settings,                        True, str)),
# ('pll1_gain_p',                          r('', '',              c.BUS_ADDR_pll1_gain_p,                          True, str)),
# ('pll1_gain_i',                          r('', '',              c.BUS_ADDR_pll1_gain_i,                          True, str)),
# ('pll1_settings',                        r('', '',              c.BUS_ADDR_pll1_settings,                        True, str)),
# ('pll1_gain_ii',                         r('', '',              c.BUS_ADDR_pll1_gain_ii,                         True, str)),
# ('fll1_settings',                        r('', '',              c.BUS_ADDR_fll1_settings,                        True, str)),
# ('pll1_gain_p',                          r('', '',              c.BUS_ADDR_pll1_gain_p,                          True, str)),
# ('pll1_gain_i',                          r('', '',              c.BUS_ADDR_pll1_gain_i,                          True, str)),
# ('pll1_settings',                        r('', '',              c.BUS_ADDR_pll1_settings,                        True, str)),
# ('pll1_gain_ii',                         r('', '',              c.BUS_ADDR_pll1_gain_ii,                         True, str)),
('integrator1_settings',                 r('', '',              c.BUS_ADDR_integrator1_settings,                 True, str)),
('integrator2_settings',                 r('', '',              c.BUS_ADDR_integrator2_settings,                 True, str)),
('dac2_setpoint',                        r('', '',              c.BUS_ADDR_dac2_setpoint,                        True, str)),
('ref_freq0_lsbs',                       r('', '',              c.BUS_ADDR_ref_freq0_lsbs,                       True, str)),
('ref_freq0_msbs',                       r('', '',              c.BUS_ADDR_ref_freq0_msbs,                       True, str)),
('ddc_filter_select',                    r('', '',              c.BUS_ADDR_ddc_filter_select,                    True, str)),
('ddc_angle_select',                     r('', '',              c.BUS_ADDR_ddc_angle_select,                     True, str)),
('nominal_ref_freq1_lsbs',               r('', '',              c.BUS_ADDR_nominal_ref_freq1_lsbs,               True, str)),
('nominal_ref_freq1_msbs',               r('', '',              c.BUS_ADDR_nominal_ref_freq1_msbs,               True, str)),
('new_ref_freq1_lsbs',                   r('', '',              c.BUS_ADDR_new_ref_freq1_lsbs,                   True, str)),
('new_ref_freq1_msbs',                   r('', '',              c.BUS_ADDR_new_ref_freq1_msbs,                   True, str)),
('dfr_phase_modulus1',                   r('', '',              c.BUS_ADDR_dfr_phase_modulus1,                   True, str)),
('dfr_phase_modulus2',                   r('', '',              c.BUS_ADDR_dfr_phase_modulus2,                   True, str)),
('dfr_phase_modulus3',                   r('', '',              c.BUS_ADDR_dfr_phase_modulus3,                   True, str)),
('dfr_phase_modulus4',                   r('', '',              c.BUS_ADDR_dfr_phase_modulus4,                   True, str)),
('dfr_phase_adjust1',                    r('', '',              c.BUS_ADDR_dfr_phase_adjust1,                    True, str)),
('dfr_phase_adjust2',                    r('', '',              c.BUS_ADDR_dfr_phase_adjust2,                    True, str)),
('dfr_phase_adjust3',                    r('', '',              c.BUS_ADDR_dfr_phase_adjust3,                    True, str)),
('dfr_phase_adjust4',                    r('', '',              c.BUS_ADDR_dfr_phase_adjust4,                    True, str)),
('delta_fr1',                            r('', '',              c.BUS_ADDR_delta_fr1,                            True, str)),
('delta_fr2',                            r('', '',              c.BUS_ADDR_delta_fr2,                            True, str)),
('delta_fr3',                            r('', '',              c.BUS_ADDR_delta_fr3,                            True, str)),
('delta_fr4',                            r('', '',              c.BUS_ADDR_delta_fr4,                            True, str)),
('ref1_state_control',                   r('', '',              c.BUS_ADDR_ref1_state_control,                   True, str)),
# ('dither_enable',                        r('', '',              c.BUS_ADDR_dither_enable,                        True, str)),
# ('dither_period_divided_by_4_minus_one', r('', '',              c.BUS_ADDR_dither_period_divided_by_4_minus_one, True, str)),
# ('dither_N_periods_minus_one',           r('', '',              c.BUS_ADDR_dither_N_periods_minus_one,           True, str)),
# ('dither_amplitude',                     r('', '',              c.BUS_ADDR_dither_amplitude,                     True, str)),
# ('dither_mode_auto',                     r('', '',              c.BUS_ADDR_dither_mode_auto,                     True, str)),
('phase_residuals_threshold[0]',         r('', '',              c.BUS_ADDR_phase_residuals_threshold[0],         True, str)),
('phase_residuals_threshold[1]',         r('', '',              c.BUS_ADDR_phase_residuals_threshold[1],         True, str)),
('freq_residuals0_threshold',            r('', '',              c.BUS_ADDR_freq_residuals0_threshold,            True, str)),
('clk_divider_modulus',                  r('', '',              c.BUS_ADDR_clk_divider_modulus,                  True, str)),
('triangular_averaging',                 r('', '',              c.BUS_ADDR_triangular_averaging,                 True, str)),
('residuals_streaming',                  r('', '',              c.BUS_ADDR_residuals_streaming,                  True, str)),
('clk_divider_phase_adjust',             r('', '',              c.BUS_ADDR_clk_divider_phase_adjust,             True, str)),
('prbs_settings',                        r('', '',              c.BUS_ADDR_prbs_settings,                        True, str)),
('prbs_size',                            r('', '',              c.BUS_ADDR_prbs_size,                            True, str)),
('mux_pll2',                             r('', '',              c.BUS_ADDR_mux_pll2,                             True, str)),
('openLoopGain[0]',                      r('', '',              c.BUS_ADDR_openLoopGain[0],                      True, str)),
('openLoopGain[1]',                      r('', '',              c.BUS_ADDR_openLoopGain[1],                      True, str)),
('openLoopGain[2]',                      r('', '',              c.BUS_ADDR_openLoopGain[2],                      True, str)),
])
